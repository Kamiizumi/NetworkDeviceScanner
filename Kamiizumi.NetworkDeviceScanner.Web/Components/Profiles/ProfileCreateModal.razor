@inject IJSRuntime JSRuntime
@inject Kamiizumi.NetworkDeviceScanner.Services.ProfileService ProfileService
@inject NavigationManager NavigationManager

<div class="modal fade" id="ProfileCreateModal" tabindex="-1" role="dialog" aria-labelledby="profileCreateModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="profileCreateModalTitle">Create Profile</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <div class="form-group">
                    <label for="ProfileCreateName">Name</label>
                    <input type="text" class="form-control" id="ProfileCreateName" bind="@newName" />
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" @onclick="OnCreate">Create</button>
            </div>
        </div>
    </div>
</div>



@code
{
    string newName;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        try
        {
            JSRuntime.InvokeAsync<string>("initAutoFocusOnModalOpen", "ProfileCreateModal", "ProfileCreateName");
        }
        catch (InvalidOperationException)
        {
            // No-op until I figure out what causes the above line to throw on page reload.
            // TODO: Check if can use firstRender to deal with this.
        }
    }

    void OnCreate()
    {
        ProfileService.Create(newName).Wait();
        NavigationManager.NavigateTo("/profiles", true);
    }
}