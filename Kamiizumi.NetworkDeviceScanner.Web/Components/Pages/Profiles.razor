@page "/profiles"
@inject Kamiizumi.NetworkDeviceScanner.Services.ProfileService ProfileService
@inject IJSRuntime JSRuntime

<h1>Profiles</h1>

<div class="modal fade" id="ProfileCreateModal" tabindex="-1" role="dialog" aria-labelledby="profileCreateModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="profileCreateModalTitle">Create Profile</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <div class="form-group">
                    <label for="ProfileCreateName">Name</label>
                    <input type="text" class="form-control" id="ProfileCreateName" bind="@newName" />
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="@OnCreate">Create</button>
            </div>
        </div>
    </div>
</div>

<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ProfileCreateModal">
    Launch demo modal
</button>

@functions
{
    string newName;

    protected override void OnAfterRender()
    {
        base.OnAfterRender();
        JSRuntime.InvokeAsync<string>("initAutoFocusOnModalOpen", "ProfileCreateModal", "ProfileCreateName");
    }

    void OnCreate()
    {
        ProfileService.Create(newName).Wait();
        JSRuntime.InvokeAsync<string>("closeModal", "ProfileCreateModal");
    }
}